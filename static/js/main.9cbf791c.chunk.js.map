{"version":3,"sources":["images/my-photo.png","components/Footer.jsx","components/Header.jsx","pages/Home.jsx","pages/About.jsx","pages/Contact.jsx","pages/Projects.jsx","pages/Skills.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Header","history","useHistory","type","onClick","push","Home","src","myphoto","alt","About","Contact","Projects","action","value","window","location","href","Skills","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,sC,4QCU5BC,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,iFCsBSC,MAxBf,WACE,IAAMC,EAAUC,cAEhB,OACE,4BAAQH,UAAU,UAChB,4BAAQI,KAAK,SAASC,QAAU,kBAAMH,EAAQI,KAAK,OACjD,qCAEF,4BAAQF,KAAK,SAASC,QAAU,kBAAMH,EAAQI,KAAK,YACjD,sCAEF,4BAAQF,KAAK,SAASC,QAAU,kBAAMH,EAAQI,KAAK,kBACjD,sDAEF,4BAAQF,KAAK,SAASC,QAAU,kBAAMH,EAAQI,KAAK,cACjD,wCAEF,4BAAQF,KAAK,SAASC,QAAU,kBAAMH,EAAQI,KAAK,eACjD,2C,yBCMOC,MArBf,WACE,OACE,yBAAKP,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,kDAEF,yBAAKA,UAAU,aACb,yBACEQ,IAAMC,IACNC,IAAI,4BACJV,UAAU,eAIhB,kBAAC,EAAD,Q,MCHSW,MAdf,WACE,OACE,yBAAKX,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,uCAGJ,kBAAC,EAAD,Q,MCKSY,MAdf,WACE,OACE,yBAAKZ,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,yCAGJ,kBAAC,EAAD,Q,MCwCSa,MAjDf,WAgBE,OACE,yBAAKb,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACb,yCAEF,0BAAMc,OAAO,GAAGd,UAAU,iBACxB,2BACEI,KAAK,SACLW,MAAM,cACNf,UAAU,cACVK,QAAU,WAzBlBW,OAAOC,SAASC,KADJ,4DA4BN,2BACEd,KAAK,SACLW,MAAM,SACNf,UAAU,cACVK,QAAU,WA1BlBW,OAAOC,SAASC,KADJ,uDA6BN,2BACEd,KAAK,SACLW,MAAM,cACNf,UAAU,cACVK,QAAU,WA3BlBW,OAAOC,SAASC,KADJ,qEAgCV,kBAAC,EAAD,Q,MC9BSC,MAdf,WACE,OACE,yBAAKnB,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBACb,6CAGJ,kBAAC,EAAD,QCSSoB,MAdf,WACE,OACE,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYX,IACzC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,SAASC,UAAYZ,IACvC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAYhB,IAClC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YAAYC,UAAYV,IAC1C,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,eAAeC,UAAYJ,OCLjCK,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9cbf791c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my-photo.c12fe601.png\";","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <h6>© 2021 Copyright: Camila de Souza Damásio</h6>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction Header() {\n  const history = useHistory();\n\n  return (\n    <header className=\"header\">\n      <button type=\"button\" onClick={ () => history.push('/') }>\n        <h5>Home</h5>\n      </button>\n      <button type=\"button\" onClick={ () => history.push('/sobre') }>\n        <h5>Sobre</h5>\n      </button>\n      <button type=\"button\" onClick={ () => history.push('/habilidades') }>\n        <h5>Skills e Conhecimento</h5>\n      </button>\n      <button type=\"button\" onClick={ () => history.push('/contato') }>\n        <h5>Contato</h5>\n      </button>\n      <button type=\"button\" onClick={ () => history.push('/projetos') }>\n        <h5>Projetos</h5>\n      </button>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../styles/Home.css';\nimport myphoto from '../images/my-photo.png';\n\nfunction Home() {\n  return (\n    <div className=\"main-div\">\n      <Header />\n      <div className=\"home-body\">\n        <div className=\"title-name\">\n          <h1>Camila Damásio</h1>\n        </div>\n        <div className=\"div-photo\">\n          <img\n            src={ myphoto }\n            alt=\"Foto de Camila Damásio\"\n            className=\"my-photo\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../styles/About.css';\n\nfunction About() {\n  return (\n    <div className=\"main-div\">\n      <Header />\n      <div className=\"about-body\">\n        <div className=\"title-about\">\n          <h1>Sobre</h1>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../styles/Contact.css';\n\nfunction Contact() {\n  return (\n    <div className=\"main-div\">\n      <Header />\n      <div className=\"contact-body\">\n        <div className=\"title-contact\">\n          <h1>Contato</h1>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../styles/Projects.css';\n\nfunction Projects() {\n  const handleClickRecipesApp = () => {\n    const url = 'https://camiladamasio.github.io/recipes-app-project/#/';\n    window.location.href = url;\n  };\n\n  const handleClickTrivia = () => {\n    const url = 'https://camiladamasio.github.io/trivia-project/#/';\n    window.location.href = url;\n  };\n\n  const handleClickMovieCards = () => {\n    const url = 'https://camiladamasio.github.io/movie-cards-library-stateful/';\n    window.location.href = url;\n  };\n\n  return (\n    <div className=\"main-div\">\n      <Header />\n      <div className=\"projects-body\">\n        <div className=\"title-projects\">\n          <h1>Projetos</h1>\n        </div>\n        <form action=\"\" className=\"form-projects\">\n          <input\n            type=\"button\"\n            value=\"Recipes App\"\n            className=\"button-link\"\n            onClick={ () => handleClickRecipesApp() }\n          />\n          <input\n            type=\"button\"\n            value=\"Trivia\"\n            className=\"button-link\"\n            onClick={ () => handleClickTrivia() }\n          />\n          <input\n            type=\"button\"\n            value=\"Movie Cards\"\n            className=\"button-link\"\n            onClick={ () => handleClickMovieCards() }\n          />\n        </form>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../styles/Skills.css';\n\nfunction Skills() {\n  return (\n    <div className=\"main-div\">\n      <Header />\n      <div className=\"skills-body\">\n        <div className=\"title-skills\">\n          <h1>Habilidades</h1>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Skills;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Projects from './pages/Projects';\nimport Skills from './pages/Skills';\n\nfunction App() {\n  return (\n    <main>\n      <Switch>\n        <Route exact path=\"/contato\" component={ Contact } />\n        <Route exact path=\"/sobre\" component={ About } />\n        <Route exact path=\"/\" component={ Home } />\n        <Route exact path=\"/projetos\" component={ Projects } />\n        <Route exact path=\"/habilidades\" component={ Skills } />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}