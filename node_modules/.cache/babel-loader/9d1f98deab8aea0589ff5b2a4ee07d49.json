{"ast":null,"code":"var _jsxFileName = \"/home/camila/Projetos/sd-012-project-recipes-app/src/pages/FoodDetails.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport functionSetFavoriteFood from '../utils/functionSetFavoriteFood';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\n\nfunction FoodDetails(props) {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const [loading, setloading] = useState(true);\n  const {\n    shouldRedirect,\n    redirect\n  } = useRedirect();\n  const [drinksRecomendation, setdrinksRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n  useEffect(() => {\n    setloading(true);\n\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const {\n        meals\n      } = await response.json();\n      setRecipeRender(meals);\n    };\n\n    fetchAPI();\n    setloading(false);\n  }, [id]);\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some(item => item.id === id)) {\n      setHeartColor(true);\n    }\n\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.meals[id]) {\n      setStart(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    const fetchAPIDrinks = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then(response => response.json());\n      const firstSix = await results.drinks.slice(0, SIX);\n      setdrinksRecomendation(firstSix);\n    };\n\n    fetchAPIDrinks();\n    setloading(false);\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    }, \"...carregando\");\n  }\n\n  if (redirect.should) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirect.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Detalhes\"), recipeRender.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: v4(),\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"meal\",\n    key: v4(),\n    src: item.strMealThumb,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, item.strMeal), /*#__PURE__*/React.createElement(ShareBtn, {\n    id: id,\n    type: \"comida\",\n    className: \"btn-share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"button\",\n    className: \"favorite-btn\",\n    onClick: () => functionSetFavoriteFood(recipeRender, id, setHeartColor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"fav-btn\",\n    src: heartColor ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favoritar\",\n    \"data-testid\": \"favorite-btn\",\n    className: \"favorite-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, item.strCategory), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, functionRenderRecipe(recipeRender)[0].map((ingredient, position) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${position}-ingredient-name-and-measure`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, ingredient, functionRenderRecipe(recipeRender)[1][position]))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, item.strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: item.strYoutube,\n    title: \"title\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, drinksRecomendation.map((recomendation, position) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${position}-recomendation-card`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    \"data-testid\": `${position}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, recomendation.strDrink))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"start\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    variant: \"success\",\n    onClick: () => shouldRedirect(`/comidas/${item.idMeal}/in-progress`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, start ? 'Start' : 'Continuar Receita'))));\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default FoodDetails;","map":{"version":3,"sources":["/home/camila/Projetos/sd-012-project-recipes-app/src/pages/FoodDetails.jsx"],"names":["React","useEffect","useState","v4","PropTypes","Button","Redirect","ShareBtn","useRedirect","functionSetFavoriteFood","functionRenderRecipe","FoodDetails","props","match","params","id","recipeRender","setRecipeRender","loading","setloading","shouldRedirect","redirect","drinksRecomendation","setdrinksRecomendation","heartColor","setHeartColor","start","setStart","fetchAPI","END_POINT","response","fetch","meals","json","favoriteRecipes","JSON","parse","localStorage","getItem","some","item","inProgressRecipes","fetchAPIDrinks","SIX","urlDrinks","results","then","firstSix","drinks","slice","should","path","map","strMealThumb","strMeal","blackHeartIcon","whiteHeartIcon","strCategory","ingredient","position","strInstructions","strYoutube","recomendation","strDrink","idMeal","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport functionSetFavoriteFood from '../utils/functionSetFavoriteFood';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\n\nfunction FoodDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const [loading, setloading] = useState(true);\n  const { shouldRedirect, redirect } = useRedirect();\n  const [drinksRecomendation, setdrinksRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n\n  useEffect(() => {\n    setloading(true);\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const { meals } = await response.json();\n      setRecipeRender(meals);\n    };\n    fetchAPI();\n    setloading(false);\n  }, [id]);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some((item) => item.id === id)) {\n      setHeartColor(true);\n    }\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.meals[id]) {\n      setStart(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    const fetchAPIDrinks = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then((response) => response.json());\n      const firstSix = await results.drinks.slice(0, SIX);\n      setdrinksRecomendation(firstSix);\n    };\n    fetchAPIDrinks();\n    setloading(false);\n  }, []);\n\n  if (loading) {\n    return <h1>...carregando</h1>;\n  }\n\n  if (redirect.should) {\n    return <Redirect to={ redirect.path } />;\n  }\n\n  return (\n    <div>\n      <h2>Detalhes</h2>\n      {recipeRender.map((item) => (\n        <div key={ v4() } className=\"details\">\n          <img\n            alt=\"meal\"\n            key={ v4() }\n            src={ item.strMealThumb }\n            data-testid=\"recipe-photo\"\n          />\n          <p data-testid=\"recipe-title\">{item.strMeal}</p>\n\n          <ShareBtn id={ id } type=\"comida\" className=\"btn-share\" />\n\n          <Button\n            variant=\"danger\"\n            type=\"button\"\n            className=\"favorite-btn\"\n            onClick={ () => functionSetFavoriteFood(recipeRender, id, setHeartColor) }\n          >\n            <img\n              id=\"fav-btn\"\n              src={ heartColor ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favoritar\"\n              data-testid=\"favorite-btn\"\n              className=\"favorite-img\"\n            />\n          </Button>\n\n          <p data-testid=\"recipe-category\">{item.strCategory}</p>\n\n          <ul>\n            {functionRenderRecipe(recipeRender)[0].map((ingredient, position) => (\n              <li\n                data-testid={ `${position}-ingredient-name-and-measure` }\n                key={ v4() }\n              >\n                {ingredient}\n                {functionRenderRecipe(recipeRender)[1][position]}\n              </li>))}\n          </ul>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n          <iframe\n            src={ item.strYoutube }\n            title=\"title\"\n            data-testid=\"video\"\n          />\n\n          <div className=\"items-wrapper\">\n            <div className=\"items\">\n              {drinksRecomendation.map((recomendation, position) => (\n                <div\n                  data-testid={ `${position}-recomendation-card` }\n                  key={ v4() }\n                >\n                  <div\n                    className=\"item\"\n                    data-testid={ `${position}-recomendation-title` }\n                  >\n                    {recomendation.strDrink}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <Button\n            className=\"start\"\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            variant=\"success\"\n            onClick={ () => shouldRedirect(`/comidas/${item.idMeal}/in-progress`) }\n          >\n            { start ? 'Start' : 'Continuar Receita' }\n          </Button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}