{"ast":null,"code":"var functionRenderRecipe=function functionRenderRecipe(recipeRender){if(recipeRender!==undefined){var ingredients=recipeRender.map(function(value){return Object.entries(value).filter(function(ingredient){return ingredient[0].includes('strIngredient')&&ingredient[1]&&ingredient[1].length&&ingredient[1]!==null;}).map(function(item){return item[1];});});var measures=recipeRender.map(function(value){return Object.entries(value).filter(function(ingredient){return ingredient[0].includes('strMeasure')&&ingredient[1]&&ingredient[1]!==' '&&ingredient[1]!==null;}).map(function(item){return item[1];});});var ingredientsAndMeasures=ingredients.map(function(name,index){return{nome:name,quantidade:measures[index]};});var ingredientsAndMeasuresList=ingredientsAndMeasures&&ingredientsAndMeasures.length&&Object.values(ingredientsAndMeasures[0]);return ingredientsAndMeasuresList;}};export default functionRenderRecipe;","map":{"version":3,"sources":["/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/src/utils/functionRenderRecipe.js"],"names":["functionRenderRecipe","recipeRender","undefined","ingredients","map","value","Object","entries","filter","ingredient","includes","length","item","measures","ingredientsAndMeasures","name","index","nome","quantidade","ingredientsAndMeasuresList","values"],"mappings":"AAAA,GAAMA,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,YAAD,CAAkB,CAC7C,GAAIA,YAAY,GAAKC,SAArB,CAAgC,CAC9B,GAAMC,CAAAA,WAAW,CAAGF,YAAY,CAACG,GAAb,CAAiB,SAACC,KAAD,QAAWC,CAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,EAC7CG,MAD6C,CACtC,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAAC,CAAD,CAAV,CACrBC,QADqB,CACZ,eADY,GACQD,UAAU,CAAC,CAAD,CADlB,EACyBA,UAAU,CAAC,CAAD,CAAV,CAAcE,MADvC,EAEvBF,UAAU,CAAC,CAAD,CAAV,GAAkB,IAFX,EADsC,EAGrBL,GAHqB,CAGjB,SAACQ,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EAHiB,CAAX,EAAjB,CAApB,CAKA,GAAMC,CAAAA,QAAQ,CAAGZ,YAAY,CAACG,GAAb,CAAiB,SAACC,KAAD,QAAWC,CAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,EAC1CG,MAD0C,CACnC,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAAC,CAAD,CAAV,CACrBC,QADqB,CACZ,YADY,GACKD,UAAU,CAAC,CAAD,CADf,EACsBA,UAAU,CAAC,CAAD,CAAV,GAAkB,GADxC,EAEvBA,UAAU,CAAC,CAAD,CAAV,GAAkB,IAFX,EADmC,EAGlBL,GAHkB,CAGd,SAACQ,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EAHc,CAAX,EAAjB,CAAjB,CAKA,GAAME,CAAAA,sBAAsB,CAAGX,WAAW,CACvCC,GAD4B,CACxB,SAACW,IAAD,CAAOC,KAAP,QAAkB,CAAEC,IAAI,CAAEF,IAAR,CAAcG,UAAU,CAAEL,QAAQ,CAACG,KAAD,CAAlC,CAAlB,EADwB,CAA/B,CAGA,GAAMG,CAAAA,0BAA0B,CAAIL,sBAAsB,EAAIA,sBAAsB,CACjFH,MADiC,EACvBL,MAAM,CAACc,MAAP,CAAcN,sBAAsB,CAAC,CAAD,CAApC,CADb,CAGA,MAAOK,CAAAA,0BAAP,CACD,CACF,CApBD,CAsBA,cAAenB,CAAAA,oBAAf","sourcesContent":["const functionRenderRecipe = (recipeRender) => {\n  if (recipeRender !== undefined) {\n    const ingredients = recipeRender.map((value) => Object.entries(value)\n      .filter((ingredient) => ingredient[0]\n        .includes('strIngredient') && ingredient[1] && ingredient[1].length\n    && ingredient[1] !== null).map((item) => item[1]));\n\n    const measures = recipeRender.map((value) => Object.entries(value)\n      .filter((ingredient) => ingredient[0]\n        .includes('strMeasure') && ingredient[1] && ingredient[1] !== ' '\n    && ingredient[1] !== null).map((item) => item[1]));\n\n    const ingredientsAndMeasures = ingredients\n      .map((name, index) => ({ nome: name, quantidade: measures[index] }));\n\n    const ingredientsAndMeasuresList = (ingredientsAndMeasures && ingredientsAndMeasures\n      .length && Object.values(ingredientsAndMeasures[0]));\n\n    return ingredientsAndMeasuresList;\n  }\n};\n\nexport default functionRenderRecipe;\n"]},"metadata":{},"sourceType":"module"}