{"ast":null,"code":"var _jsxFileName = \"/home/camila/Projetos/sd-012-project-recipes-app/src/pages/FoodByOrigin.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport HeaderWithSearch from '../components/HeaderWithSearch';\nimport { getMeal } from '../redux/actions';\nimport useRedirect from '../hooks/useRedirect';\n\nfunction FoodByOrigin() {\n  const [originsListFilter, setOriginsListFilter] = useState([]);\n  const [origins, setOrigins] = useState([]);\n  const [firstTwelve, setFistTwelve] = useState([]);\n  const [originSelect, setOriginSelect] = useState({\n    selected: 'All'\n  });\n  const {\n    shouldRedirect,\n    redirect\n  } = useRedirect();\n  const TWELVE = 12;\n  const {\n    selected\n  } = originSelect;\n  const dispatch = useDispatch();\n  const {\n    reducerAPI: {\n      loading,\n      meals\n    }\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getMeal());\n  }, [dispatch]);\n  useEffect(() => {\n    const fetchFilterOrigins = async () => {\n      if (selected !== 'All') {\n        const END_POINT = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${selected}`;\n        const response = await fetch(END_POINT);\n        const {\n          meals: filterOriginsList\n        } = await response.json();\n        return setOriginsListFilter(filterOriginsList);\n      }\n    };\n\n    fetchFilterOrigins();\n  }, [selected]);\n  useEffect(() => {\n    const fetchOrigins = async () => {\n      const END_POINT = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(END_POINT);\n      const {\n        meals: originsList\n      } = await response.json();\n      const originsMap = originsList.map(({\n        strArea\n      }) => strArea);\n      const results = ['All', ...originsMap];\n      return setOrigins(results);\n    };\n\n    fetchOrigins();\n  }, [origins]);\n  useEffect(() => {\n    if (selected === 'All') {\n      setFistTwelve(meals.slice(0, TWELVE));\n    } else {\n      setFistTwelve(originsListFilter.slice(0, TWELVE));\n    }\n  }, [originsListFilter, meals, selected]);\n\n  const handleChange = ({\n    target: {\n      name,\n      type,\n      value,\n      checked\n    }\n  }) => {\n    function newValue() {\n      switch (type) {\n        case 'checkbox':\n          return checked;\n\n        case 'number':\n          return +value;\n\n        default:\n          return value;\n      }\n    }\n\n    setOriginSelect({ ...originSelect,\n      [name]: newValue()\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"Carregando...\");\n  }\n\n  if (redirect.should) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirect.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderWithSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Explorar Origem\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Origin\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"explore-by-area-dropdown\",\n    id: \"selected\",\n    name: \"selected\",\n    onChange: handleChange,\n    value: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, origins.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    \"data-testid\": `${option}-option`,\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, option)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, firstTwelve.map(({\n    idMeal,\n    strMealThumb,\n    strMeal\n  }, index) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => shouldRedirect(`/comidas/${idMeal}`),\n    key: idMeal,\n    \"data-testid\": `${index}-recipe-card`,\n    className: \"recipe-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"meal\",\n    src: strMealThumb,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, strMeal)))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default FoodByOrigin;","map":{"version":3,"sources":["/home/camila/Projetos/sd-012-project-recipes-app/src/pages/FoodByOrigin.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Redirect","Footer","HeaderWithSearch","getMeal","useRedirect","FoodByOrigin","originsListFilter","setOriginsListFilter","origins","setOrigins","firstTwelve","setFistTwelve","originSelect","setOriginSelect","selected","shouldRedirect","redirect","TWELVE","dispatch","reducerAPI","loading","meals","state","fetchFilterOrigins","END_POINT","response","fetch","filterOriginsList","json","fetchOrigins","originsList","originsMap","map","strArea","results","slice","handleChange","target","name","type","value","checked","newValue","should","path","option","idMeal","strMealThumb","strMeal","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport HeaderWithSearch from '../components/HeaderWithSearch';\nimport { getMeal } from '../redux/actions';\nimport useRedirect from '../hooks/useRedirect';\n\nfunction FoodByOrigin() {\n  const [originsListFilter, setOriginsListFilter] = useState([]);\n  const [origins, setOrigins] = useState([]);\n  const [firstTwelve, setFistTwelve] = useState([]);\n  const [originSelect, setOriginSelect] = useState({ selected: 'All' });\n  const { shouldRedirect, redirect } = useRedirect();\n  const TWELVE = 12;\n\n  const { selected } = originSelect;\n\n  const dispatch = useDispatch();\n  const { reducerAPI: { loading, meals } } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getMeal());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const fetchFilterOrigins = async () => {\n      if (selected !== 'All') {\n        const END_POINT = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${selected}`;\n\n        const response = await fetch(END_POINT);\n        const { meals: filterOriginsList } = await response.json();\n        return setOriginsListFilter(filterOriginsList);\n      }\n    };\n    fetchFilterOrigins();\n  }, [selected]);\n\n  useEffect(() => {\n    const fetchOrigins = async () => {\n      const END_POINT = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n\n      const response = await fetch(END_POINT);\n      const { meals: originsList } = await response.json();\n      const originsMap = originsList.map(({ strArea }) => strArea);\n      const results = ['All', ...originsMap];\n      return setOrigins(results);\n    };\n    fetchOrigins();\n  }, [origins]);\n\n  useEffect(() => {\n    if (selected === 'All') {\n      setFistTwelve(meals.slice(0, TWELVE));\n    } else {\n      setFistTwelve(originsListFilter.slice(0, TWELVE));\n    }\n  }, [originsListFilter, meals, selected]);\n\n  const handleChange = ({ target: { name, type, value, checked } }) => {\n    function newValue() {\n      switch (type) {\n      case 'checkbox': return checked;\n      case 'number': return +value;\n      default: return value;\n      }\n    }\n    setOriginSelect({ ...originSelect, [name]: newValue() });\n  };\n\n  if (loading) {\n    return <h2>Carregando...</h2>;\n  }\n  if (redirect.should) {\n    return <Redirect to={ redirect.path } />;\n  }\n  return (\n    <>\n      <HeaderWithSearch>Explorar Origem</HeaderWithSearch>\n      <label htmlFor=\"selected\">\n        Origin\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          id=\"selected\"\n          name=\"selected\"\n          onChange={ handleChange }\n          value={ selected }\n        >\n          { origins.map((option) => (\n            <option\n              data-testid={ `${option}-option` }\n              key={ option }\n              value={ option }\n            >\n              { option }\n            </option>\n          )) }\n        </select>\n      </label>\n      <div>\n        {\n          firstTwelve.map(({ idMeal, strMealThumb, strMeal }, index) => (\n            <button\n              type=\"button\"\n              onClick={ () => shouldRedirect(`/comidas/${idMeal}`) }\n              key={ idMeal }\n              data-testid={ `${index}-recipe-card` }\n              className=\"recipe-card\"\n            >\n              <img\n                alt=\"meal\"\n                src={ strMealThumb }\n                data-testid={ `${index}-card-img` }\n              />\n              <h4 data-testid={ `${index}-card-name` }>{strMeal}</h4>\n            </button>\n          ))\n        }\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default FoodByOrigin;\n"]},"metadata":{},"sourceType":"module"}