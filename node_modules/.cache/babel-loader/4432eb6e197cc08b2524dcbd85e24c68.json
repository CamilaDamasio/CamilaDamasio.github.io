{"ast":null,"code":"import _regeneratorRuntime from\"/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import fetchAPICocktail from'../../utils/fetchAPICocktail';export var GET_API_COCKTAIL='GET_API_COCKTAIL';export var GET_API_COCKTAIL_SUCESS='GET_API_COCKTAIL_SUCESS';export var GET_API_COCKTAIL_ERROR='GET_API_COCKTAIL_ERROR';export var getAPICocktail=function getAPICocktail(){return{type:GET_API_COCKTAIL};};export var getAPICocktailSucess=function getAPICocktailSucess(payload){return{type:GET_API_COCKTAIL_SUCESS,payload:payload};};export var getAPICocktailError=function getAPICocktailError(error){return{type:GET_API_COCKTAIL_ERROR,payload:error};};export var getCocktail=function getCocktail(){var search=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Nome';return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var fetchAPI;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(getAPICocktail());_context.prev=1;_context.next=4;return fetchAPICocktail(search,type);case 4:fetchAPI=_context.sent;dispatch(getAPICocktailSucess(fetchAPI));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(getAPICocktailError(_context.t0));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/src/redux/actions/actionAPICocktail.js"],"names":["fetchAPICocktail","GET_API_COCKTAIL","GET_API_COCKTAIL_SUCESS","GET_API_COCKTAIL_ERROR","getAPICocktail","type","getAPICocktailSucess","payload","getAPICocktailError","error","getCocktail","search","dispatch","fetchAPI"],"mappings":"iWAAA,MAAOA,CAAAA,gBAAP,KAA6B,8BAA7B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CAEP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAO,CACnCC,IAAI,CAAEJ,gBAD6B,CAAP,EAAvB,CAIP,MAAO,IAAMK,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,OAAD,QAAc,CAChDF,IAAI,CAAEH,uBAD0C,CAEhDK,OAAO,CAAPA,OAFgD,CAAd,EAA7B,CAKP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,QAAY,CAC7CJ,IAAI,CAAEF,sBADuC,CAE7CI,OAAO,CAAEE,KAFoC,CAAZ,EAA5B,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAACC,CAAAA,MAAD,2DAAU,EAAV,IAAcN,CAAAA,IAAd,2DAAqB,MAArB,gGAAgC,iBAAOO,QAAP,+HACzDA,QAAQ,CAACR,cAAc,EAAf,CAAR,CADyD,sCAGhCJ,CAAAA,gBAAgB,CAACW,MAAD,CAASN,IAAT,CAHgB,QAGjDQ,QAHiD,eAIvDD,QAAQ,CAACN,oBAAoB,CAACO,QAAD,CAArB,CAAR,CAJuD,+EAMvDD,QAAQ,CAACJ,mBAAmB,aAApB,CAAR,CANuD,oEAAhC,gEAApB","sourcesContent":["import fetchAPICocktail from '../../utils/fetchAPICocktail';\n\nexport const GET_API_COCKTAIL = 'GET_API_COCKTAIL';\nexport const GET_API_COCKTAIL_SUCESS = 'GET_API_COCKTAIL_SUCESS';\nexport const GET_API_COCKTAIL_ERROR = 'GET_API_COCKTAIL_ERROR';\n\nexport const getAPICocktail = () => ({\n  type: GET_API_COCKTAIL,\n});\n\nexport const getAPICocktailSucess = (payload) => ({\n  type: GET_API_COCKTAIL_SUCESS,\n  payload,\n});\n\nexport const getAPICocktailError = (error) => ({\n  type: GET_API_COCKTAIL_ERROR,\n  payload: error,\n});\n\nexport const getCocktail = (search = '', type = 'Nome') => async (dispatch) => {\n  dispatch(getAPICocktail());\n  try {\n    const fetchAPI = await fetchAPICocktail(search, type);\n    dispatch(getAPICocktailSucess(fetchAPI));\n  } catch (error) {\n    dispatch(getAPICocktailError(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}