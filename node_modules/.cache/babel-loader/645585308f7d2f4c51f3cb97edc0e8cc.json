{"ast":null,"code":"import React from'react';import PropTypes from'prop-types';import{v4}from'uuid';function RadiosButton(props){var handleChange=props.handleChange,radios=props.radios,value=props.value,name=props.name;return/*#__PURE__*/React.createElement(React.Fragment,null,radios.map(function(radio){var _radio$textId=radio.textId,textId=_radio$textId===void 0?'':_radio$textId,valueRadio=radio.valueRadio;return/*#__PURE__*/React.createElement(\"label\",{htmlFor:valueRadio,key:v4()},/*#__PURE__*/React.createElement(\"input\",{checked:value===valueRadio,\"data-testid\":textId,name:name,id:valueRadio,onChange:handleChange,type:\"radio\",value:valueRadio}),valueRadio);}));}var func=PropTypes.func,string=PropTypes.string,arrayOf=PropTypes.arrayOf,objectOf=PropTypes.objectOf;export default RadiosButton;","map":{"version":3,"sources":["/home/camila/Repositorios_GitHub/project-recipes-app/src/components/DefaultComponents/RadiosButton.js"],"names":["React","PropTypes","v4","RadiosButton","props","handleChange","radios","value","name","map","radio","textId","valueRadio","func","string","arrayOf","objectOf"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,EAAT,KAAmB,MAAnB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,IACnBC,CAAAA,YADmB,CACmBD,KADnB,CACnBC,YADmB,CACLC,MADK,CACmBF,KADnB,CACLE,MADK,CACGC,KADH,CACmBH,KADnB,CACGG,KADH,CACUC,IADV,CACmBJ,KADnB,CACUI,IADV,CAG3B,mBACE,wCAEIF,MAAM,CAACG,GAAP,CAAW,SAACC,KAAD,CAAW,mBACgBA,KADhB,CACZC,MADY,CACZA,MADY,wBACH,EADG,eACCC,UADD,CACgBF,KADhB,CACCE,UADD,CAGpB,mBACE,6BAAO,OAAO,CAAGA,UAAjB,CAA8B,GAAG,CAAGV,EAAE,EAAtC,eACE,6BACE,OAAO,CAAGK,KAAK,GAAKK,UADtB,CAEE,cAAcD,MAFhB,CAGE,IAAI,CAAGH,IAHT,CAIE,EAAE,CAAGI,UAJP,CAKE,QAAQ,CAAGP,YALb,CAME,IAAI,CAAC,OANP,CAOE,KAAK,CAAGO,UAPV,EADF,CAUIA,UAVJ,CADF,CAcD,CAjBD,CAFJ,CADF,CAwBD,C,GAEOC,CAAAA,I,CAAoCZ,S,CAApCY,I,CAAMC,M,CAA8Bb,S,CAA9Ba,M,CAAQC,O,CAAsBd,S,CAAtBc,O,CAASC,Q,CAAaf,S,CAAbe,Q,CAQ/B,cAAeb,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\n\nfunction RadiosButton(props) {\n  const { handleChange, radios, value, name } = props;\n\n  return (\n    <>\n      {\n        radios.map((radio) => {\n          const { textId = '', valueRadio } = radio;\n\n          return (\n            <label htmlFor={ valueRadio } key={ v4() }>\n              <input\n                checked={ value === valueRadio }\n                data-testid={ textId }\n                name={ name }\n                id={ valueRadio }\n                onChange={ handleChange }\n                type=\"radio\"\n                value={ valueRadio }\n              />\n              { valueRadio }\n            </label>\n          );\n        })\n      }\n    </>\n  );\n}\n\nconst { func, string, arrayOf, objectOf } = PropTypes;\nRadiosButton.propTypes = {\n  handleChange: func.isRequired,\n  name: string.isRequired,\n  radios: arrayOf(objectOf(string)).isRequired,\n  value: string.isRequired,\n};\n\nexport default RadiosButton;\n"]},"metadata":{},"sourceType":"module"}