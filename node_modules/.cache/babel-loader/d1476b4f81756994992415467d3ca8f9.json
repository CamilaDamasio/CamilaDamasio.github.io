{"ast":null,"code":"import _regeneratorRuntime from\"/home/camila/Repositorios_GitHub/project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/camila/Repositorios_GitHub/project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/camila/Repositorios_GitHub/project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';export default function useRandom(type){var _useState=useState(),_useState2=_slicedToArray(_useState,2),random=_useState2[0],setRandom=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var mealURL='https://www.themealdb.com/api/json/v1/1/random.php';var drinkURL='https://www.thecocktaildb.com/api/json/v1/1/random.php';useEffect(function(){var getRandom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,_result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(type==='meal')){_context.next=11;break;}_context.prev=1;_context.next=4;return fetch(mealURL).then(function(response){return response.json();});case 4:result=_context.sent;setRandom(result.meals[0]);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);setError({error:_context.t0});case 11:if(!(type==='drink')){_context.next=22;break;}_context.prev=12;_context.next=15;return fetch(drinkURL).then(function(response){return response.json();});case 15:_result=_context.sent;setRandom(_result.drinks[0]);_context.next=22;break;case 19:_context.prev=19;_context.t1=_context[\"catch\"](12);setError({error:_context.t1});case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,8],[12,19]]);}));return function getRandom(){return _ref.apply(this,arguments);};}();getRandom();},[type]);return[random,error];}","map":{"version":3,"sources":["/home/camila/Repositorios_GitHub/project-recipes-app/src/hooks/useRandom.js"],"names":["useEffect","useState","useRandom","type","random","setRandom","error","setError","mealURL","drinkURL","getRandom","fetch","then","response","json","result","meals","drinks"],"mappings":"8fAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,eACVF,QAAQ,EADE,wCAC/BG,MAD+B,eACvBC,SADuB,8BAEZJ,QAAQ,EAFI,yCAE/BK,KAF+B,eAExBC,QAFwB,eAGtC,GAAMC,CAAAA,OAAO,CAAG,oDAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAG,wDAAjB,CAEAT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,SAAS,0FAAG,2JACZP,IAAI,GAAK,MADG,iEAGSQ,CAAAA,KAAK,CAACH,OAAD,CAAL,CAAeI,IAAf,CAAoB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAApB,CAHT,QAGNC,MAHM,eAIZV,SAAS,CAACU,MAAM,CAACC,KAAP,CAAa,CAAb,CAAD,CAAT,CAJY,+EAMZT,QAAQ,CAAC,CACPD,KAAK,YADE,CAAD,CAAR,CANY,aAWZH,IAAI,GAAK,OAXG,mEAaSQ,CAAAA,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAArB,CAbT,SAaNC,OAbM,eAcZV,SAAS,CAACU,OAAM,CAACE,MAAP,CAAc,CAAd,CAAD,CAAT,CAdY,kFAgBZV,QAAQ,CAAC,CACPD,KAAK,YADE,CAAD,CAAR,CAhBY,4EAAH,kBAATI,CAAAA,SAAS,0CAAf,CAsBAA,SAAS,GACV,CAxBQ,CAwBN,CAACP,IAAD,CAxBM,CAAT,CA0BA,MAAO,CAACC,MAAD,CAASE,KAAT,CAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useRandom(type) {\n  const [random, setRandom] = useState();\n  const [error, setError] = useState();\n  const mealURL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const drinkURL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\n  useEffect(() => {\n    const getRandom = async () => {\n      if (type === 'meal') {\n        try {\n          const result = await fetch(mealURL).then((response) => response.json());\n          setRandom(result.meals[0]);\n        } catch (err) {\n          setError({\n            error: err,\n          });\n        }\n      }\n      if (type === 'drink') {\n        try {\n          const result = await fetch(drinkURL).then((response) => response.json());\n          setRandom(result.drinks[0]);\n        } catch (err) {\n          setError({\n            error: err,\n          });\n        }\n      }\n    };\n    getRandom();\n  }, [type]);\n\n  return [random, error];\n}\n"]},"metadata":{},"sourceType":"module"}