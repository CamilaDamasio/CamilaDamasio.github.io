{"ast":null,"code":"import _slicedToArray from\"/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Redirect}from'react-router-dom';import{Button}from'react-bootstrap';import profileIcon from\"../images/profileIcon.svg\";import searchIcon from\"../images/searchIcon.svg\";import SearchBar from'./SearchBar';import useRedirect from'../hooks/useRedirect';function HeaderWithSearch(_ref){var children=_ref.children;var _useRedirect=useRedirect(),shouldRedirect=_useRedirect.shouldRedirect,redirect=_useRedirect.redirect;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visibleSearch=_useState2[0],setVisibleSearch=_useState2[1];if(redirect.should)return/*#__PURE__*/React.createElement(Redirect,{to:redirect.path});var handleToggleClass=function handleToggleClass(){return setVisibleSearch(function(currState){return!currState;});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"header\",{className:\"header-with-search header\"},/*#__PURE__*/React.createElement(\"h2\",{\"data-testid\":\"page-title\"},children),/*#__PURE__*/React.createElement(\"div\",{className:\"header-buttons\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",onClick:function onClick(){return shouldRedirect('/perfil');}},/*#__PURE__*/React.createElement(\"img\",{\"data-testid\":\"profile-top-btn\",src:profileIcon,alt:\"\\xEDcone de perfil\",className:\"icon\"})),/*#__PURE__*/React.createElement(Button,{type:\"button\",onClick:handleToggleClass},/*#__PURE__*/React.createElement(\"img\",{\"data-testid\":\"search-top-btn\",src:searchIcon,alt:\"\\xEDcone de busca\",className:\"icon\"})))),visibleSearch&&/*#__PURE__*/React.createElement(\"div\",{className:\"search-bar\"},/*#__PURE__*/React.createElement(SearchBar,null)));}export default HeaderWithSearch;","map":{"version":3,"sources":["/home/camila/Repositorios_GitHub/sd-012-project-recipes-app/src/components/HeaderWithSearch.js"],"names":["React","useState","Redirect","Button","SearchBar","useRedirect","HeaderWithSearch","children","shouldRedirect","redirect","visibleSearch","setVisibleSearch","should","path","handleToggleClass","currState","profileIcon","searchIcon"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,MAAT,KAAuB,iBAAvB,C,oGAGA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CAEA,QAASC,CAAAA,gBAAT,MAAwC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,kBACDF,WAAW,EADV,CAC9BG,cAD8B,cAC9BA,cAD8B,CACdC,QADc,cACdA,QADc,eAEIR,QAAQ,CAAC,KAAD,CAFZ,wCAE/BS,aAF+B,eAEhBC,gBAFgB,eAItC,GAAIF,QAAQ,CAACG,MAAb,CAAqB,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAGH,QAAQ,CAACI,IAAxB,EAAP,CAErB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAMH,CAAAA,gBAAgB,CAAC,SAACI,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAtB,EAA1B,CAEA,mBACE,4CACE,8BAAQ,SAAS,CAAC,2BAAlB,eACE,0BAAI,cAAY,YAAhB,EAA+BR,QAA/B,CADF,cAEE,2BAAK,SAAS,CAAC,gBAAf,eACE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAG,yBAAMC,CAAAA,cAAc,CAAC,SAAD,CAApB,EAFZ,eAIE,2BACE,cAAY,iBADd,CAEE,GAAG,CAAGQ,WAFR,CAGE,GAAG,CAAC,oBAHN,CAIE,SAAS,CAAC,MAJZ,EAJF,CADF,cAYE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAGF,iBAFZ,eAIE,2BACE,cAAY,gBADd,CAEE,GAAG,CAAGG,UAFR,CAGE,GAAG,CAAC,mBAHN,CAIE,SAAS,CAAC,MAJZ,EAJF,CAZF,CAFF,CADF,CA4BIP,aAAa,eAEX,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,SAAD,MADF,CA9BN,CADF,CAoCD,CAMD,cAAeJ,CAAAA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport useRedirect from '../hooks/useRedirect';\n\nfunction HeaderWithSearch({ children }) {\n  const { shouldRedirect, redirect } = useRedirect();\n  const [visibleSearch, setVisibleSearch] = useState(false);\n\n  if (redirect.should) return <Redirect to={ redirect.path } />;\n\n  const handleToggleClass = () => setVisibleSearch((currState) => !currState);\n\n  return (\n    <div>\n      <header className=\"header-with-search header\">\n        <h2 data-testid=\"page-title\">{ children }</h2>\n        <div className=\"header-buttons\">\n          <Button\n            type=\"button\"\n            onClick={ () => shouldRedirect('/perfil') }\n          >\n            <img\n              data-testid=\"profile-top-btn\"\n              src={ profileIcon }\n              alt=\"ícone de perfil\"\n              className=\"icon\"\n            />\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={ handleToggleClass }\n          >\n            <img\n              data-testid=\"search-top-btn\"\n              src={ searchIcon }\n              alt=\"ícone de busca\"\n              className=\"icon\"\n            />\n          </Button>\n        </div>\n      </header>\n      { visibleSearch\n        && (\n          <div className=\"search-bar\">\n            <SearchBar />\n          </div>) }\n    </div>\n  );\n}\n\nHeaderWithSearch.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default HeaderWithSearch;\n"]},"metadata":{},"sourceType":"module"}