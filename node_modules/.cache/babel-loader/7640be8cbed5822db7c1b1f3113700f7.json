{"ast":null,"code":"var _jsxFileName = \"/home/camila/Projetos/sd-012-project-recipes-app/src/pages/DrinksDetails.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport fuctionSetFavorite from '../utils/functionSetFavorite';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\n\nfunction DrinksDetails(props) {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const [loading, setloading] = useState(true);\n  const {\n    shouldRedirect,\n    redirect\n  } = useRedirect();\n  const [mealsRecomendation, setmealsRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n  useEffect(() => {\n    setloading(true);\n\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const {\n        drinks\n      } = await response.json();\n      setRecipeRender(drinks);\n    };\n\n    fetchAPI();\n    setloading(false);\n  }, [id]);\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some(item => item.id === id)) {\n      setHeartColor(true);\n    }\n\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.cocktails[id]) {\n      setStart(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    setloading(true);\n\n    const fetchAPIMeals = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then(response => response.json());\n      const firstSix = await results.meals.slice(0, SIX);\n      setmealsRecomendation(firstSix);\n    };\n\n    fetchAPIMeals();\n    setloading(false);\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, \"...carregando\");\n  }\n\n  if (redirect.should) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirect.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Detalhes\"), !recipeRender ? 'loading' : recipeRender.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: v4(),\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"drink\",\n    key: v4(),\n    src: item.strDrinkThumb,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, item.strDrink), /*#__PURE__*/React.createElement(ShareBtn, {\n    id: id,\n    type: \"bebida\",\n    className: \"btn-share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"button\",\n    className: \"favorite-btn\",\n    onClick: () => fuctionSetFavorite(recipeRender, id, setHeartColor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"fav-btn\",\n    src: heartColor ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favoritar\",\n    \"data-testid\": \"favorite-btn\",\n    className: \"favorite-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, item.strAlcoholic), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, functionRenderRecipe(recipeRender)[0].map((ingredient, position) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${position}-ingredient-name-and-measure`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, ingredient, functionRenderRecipe(recipeRender)[1][position]))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, item.strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: item.strYoutube,\n    title: \"title\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, mealsRecomendation.map((recomendation, position) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${position}-recomendation-card`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    \"data-testid\": `${position}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, recomendation.strMeal))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"start\",\n    variant: \"success\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => shouldRedirect(`/bebidas/${item.idDrink}/in-progress`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, start ? 'Start' : 'Continuar Receita'))));\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default DrinksDetails;","map":{"version":3,"sources":["/home/camila/Projetos/sd-012-project-recipes-app/src/pages/DrinksDetails.jsx"],"names":["React","useEffect","useState","v4","PropTypes","Button","Redirect","ShareBtn","useRedirect","fuctionSetFavorite","functionRenderRecipe","DrinksDetails","props","match","params","id","recipeRender","setRecipeRender","loading","setloading","shouldRedirect","redirect","mealsRecomendation","setmealsRecomendation","heartColor","setHeartColor","start","setStart","fetchAPI","END_POINT","response","fetch","drinks","json","favoriteRecipes","JSON","parse","localStorage","getItem","some","item","inProgressRecipes","cocktails","fetchAPIMeals","SIX","urlDrinks","results","then","firstSix","meals","slice","should","path","map","strDrinkThumb","strDrink","blackHeartIcon","whiteHeartIcon","strAlcoholic","ingredient","position","strInstructions","strYoutube","recomendation","strMeal","idDrink","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport fuctionSetFavorite from '../utils/functionSetFavorite';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\n\nfunction DrinksDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const [loading, setloading] = useState(true);\n  const { shouldRedirect, redirect } = useRedirect();\n  const [mealsRecomendation, setmealsRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n\n  useEffect(() => {\n    setloading(true);\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const { drinks } = await response.json();\n      setRecipeRender(drinks);\n    };\n    fetchAPI();\n    setloading(false);\n  }, [id]);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some((item) => item.id === id)) {\n      setHeartColor(true);\n    }\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.cocktails[id]) {\n      setStart(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    setloading(true);\n    const fetchAPIMeals = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then((response) => response.json());\n      const firstSix = await results.meals.slice(0, SIX);\n      setmealsRecomendation(firstSix);\n    };\n    fetchAPIMeals();\n    setloading(false);\n  }, []);\n\n  if (loading) {\n    return <h1>...carregando</h1>;\n  }\n\n  if (redirect.should) {\n    return <Redirect to={ redirect.path } />;\n  }\n\n  return (\n    <div>\n      <h2>Detalhes</h2>\n      {!recipeRender ? 'loading'\n        : recipeRender.map((item) => (\n          <div key={ v4() } className=\"details\">\n            <img\n              alt=\"drink\"\n              key={ v4() }\n              src={ item.strDrinkThumb }\n              data-testid=\"recipe-photo\"\n            />\n            <p data-testid=\"recipe-title\">{item.strDrink}</p>\n\n            <ShareBtn id={ id } type=\"bebida\" className=\"btn-share\" />\n\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              className=\"favorite-btn\"\n              onClick={ () => fuctionSetFavorite(recipeRender, id, setHeartColor) }\n            >\n              <img\n                id=\"fav-btn\"\n                src={ heartColor ? blackHeartIcon : whiteHeartIcon }\n                alt=\"favoritar\"\n                data-testid=\"favorite-btn\"\n                className=\"favorite-img\"\n              />\n            </Button>\n\n            <p data-testid=\"recipe-category\">{item.strAlcoholic}</p>\n            <ul>\n              {functionRenderRecipe(recipeRender)[0].map((ingredient, position) => (\n                <li\n                  data-testid={ `${position}-ingredient-name-and-measure` }\n                  key={ v4() }\n                >\n                  {ingredient}\n                  {functionRenderRecipe(recipeRender)[1][position]}\n                </li>))}\n            </ul>\n            <p data-testid=\"instructions\">{item.strInstructions}</p>\n            <iframe\n              src={ item.strYoutube }\n              title=\"title\"\n              data-testid=\"video\"\n            />\n\n            <div className=\"items-wrapper\">\n              <div className=\"items\">\n                {mealsRecomendation.map((recomendation, position) => (\n                  <div\n                    data-testid={ `${position}-recomendation-card` }\n                    key={ v4() }\n                  >\n                    <div\n                      className=\"item\"\n                      data-testid={ `${position}-recomendation-title` }\n                    >\n                      {recomendation.strMeal}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <Button\n              className=\"start\"\n              variant=\"success\"\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              onClick={ () => shouldRedirect(`/bebidas/${item.idDrink}/in-progress`) }\n            >\n              { start ? 'Start' : 'Continuar Receita' }\n            </Button>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default DrinksDetails;\n"]},"metadata":{},"sourceType":"module"}